# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
#
# This config file uses keycodes (bindsym) and was written for the QWERTY
# layout.
#
# To get a config file with the same key positions, but for your current
# layout, use the i3-config-wizard
#

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up k
set $down j
set $left h
set $right l
set $mod Mod4
set $terminal kitty
set $browser flatpak run io.github.zen_browser.zen
set $rofim rofi-man
# set $locker i3lock -t -i /usr/share/backgrounds/sekiro.png
set $locker dm-tool lock
set $screenshotter ~/scripts/screenshot

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Iosevka Nerd Font 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3
exec --no-startup-id nitrogen --restore; sleep 1; $picom
# authentication agent
exec_always /usr/lib/polkit-kde-authentication-agent-1
# notfication service
exec_always --no-startup-id dunst
# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet
exec_always --no-startup-id pulseaudio -k && pulseaudio --start
exec_always --no-startup-id kdeconnect-indicator
exec --no-startup-id xfce4-power-manager
exec --no-startup-id pamac-tray
exec_always --no-startup-id blueman-applet
# exec --no-startup-id pa-applet

# clipboard-manager
exec_always --no-startup-id picom
exec_always --no-startup-id ~/.config/polybar/launch.sh
# copyq requires polybar to be launched
exec_always --no-startup-id killall clipit && clipit
exec emacs --daemon

# work @clarisights
# no-need for this to spawn, when it's reported I'll manually go and check in
# exec --no-startup-id ~/.local/bin/DrSprinto-4.0.7.AppImage


# exec --no-startup-id kitty --name wtfutil wtfutil
# used `xwininfo` to find out the id of the window
# Ref: https://i3wm.org/docs/userguide.html#command_criteria
# Ref: https://i3wm.org/docs/userguide.html#assign_workspace
# assign [class="^kitty$" instance="^wtfutil$"] 8

# lockscreen
exec --no-startup-id xautolock -time 30 -locker $locker -detectsleep -corners -00-
# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- $locker


# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Start Applications
bindsym $mod+Return exec $terminal
# bindsym $mod+Print --release exec --no-startup-id i3-scrot -w
# bindsym $mod+Shift+Print --release exec --no-startup-id i3-scrot -s

# confirm_os_window_close will ensure that confirmation on window close is not done, to preserve
# the behavior before this change when running it in an X11 window directly and not in a terminal
bindsym $mod+F1 exec $terminal -o confirm_os_window_close=0 emacsclient -c -a='' -nw
bindsym $mod+F2 exec $browser -p personal; exec notify-send 'zen@personal'
bindsym $mod+Ctrl+F2 exec $browser -p work; exec notify-send 'zen@work'
# bindsym $mod+F3 exec $terminal --profile ophamster -e ranger
bindsym $mod+F3 exec $terminal ranger
bindsym $mod+Ctrl+F3 exec pcmanfm
# Installed via AUR package manager, flatpak install although inline with the
# releases and less stupid that the `snap` equivalent, for whatever reason
# wasn't letting me login. Symptoms similar to https://www.reddit.com/r/flatpak/comments/13p7ldf/spotify_wants_to_open_a_browser_tab_but_wont/
# but the same reason.
bindsym $mod+F4 exec flatpak run com.spotify.Client
bindsym $mod+F5 exec gimp
bindsym $mod+t exec --no-startup-id pkill picom; exec notify-send 'killed picom'
bindsym $mod+Ctrl+t exec --no-startup-id $picom
# bindsym Print --release exec --no-startup-id i3-scrot -s
bindsym Print --release exec --no-startup-id $screenshotter; exec notify-send 'screenshot'
# bindsym Ctrl+Print --release exec --no-startup-id i3-scrot -w
bindsym $mod+Ctrl+x --release exec --no-startup-id xkill

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym $mod+Shift+q kill

# rofi shortcuts
bindsym $mod+d exec --no-startup-id rofi -show drun
bindsym $mod+m exec --no-startup-id rofi -show man -modes "man:$rofim" -matching regex -tokenize
bindsym Mod1+Tab exec --no-startup-id rofi -show window
# A more modern dmenu replacement is rofi:
# bindsym $mod+d exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
# workspace back and forth (with/without active container)
workspace_auto_back_and_forth no
smart_borders on
hide_edge_borders none
# This will keep the urgent focus for a while longer after we switch
# to the workspace raising the urgency. This is so that amongst all the
# other containers/applications present on the urgent workspace, we'll have
# enough time to identify which application actually raised the urgency hint
force_display_urgency_hint 3000 ms
# This only allows u to move in a certain direction within a container, and when
# u hit the edge of a container it will "wrap around" to the opposite end and start
# from there again. If u need to switch to a window which does not share a parent,
# then u need to EXPLICITLY move up ancestors till they share the parent and then
# are able to move in the direction u want and get this application/container.
focus_wrapping force

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
mouse_warping output

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Shift+v split h; exec notify-send 'split-vertically'

# split in vertical orientation
bindsym $mod+v split v; exec notify-send 'split-horizontally'

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: work"
set $ws2 "2: work 2"
set $ws3 "3: comms"
set $ws4 "4: media"
set $ws5 "5: personal"
set $ws6 "6: personal 2"
set $ws7 "7: personal 3"
set $ws8 "8: personal 4"

# gaps
gaps inner 5
gaps outer 1
gaps bottom 0

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8

# move focused container to workspace while maintaining focus
bindsym $mod+Shift+1 move container to workspace number $ws1; workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2; workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3; workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4; workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5; workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6; workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7; workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8; workspace number $ws8

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"



################################ MODES #######################################
# Set shut down, restart and locking features
bindsym $mod+0 mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown, (Shift+l)ogout
mode "$mode_system" {
    bindsym l exec --no-startup-id $locker, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"
    bindsym Shift+l exec --no-startup-id i3-msg exit, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym Ctrl+g mode "default"
}

bindsym $mod+9 exec $locker

# resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left       resize shrink width 10 px or 10 ppt
        bindsym $down       resize grow height 10 px or 10 ppt
        bindsym $up         resize shrink height 10 px or 10 ppt
        bindsym $right      resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width 10 px or 10 ppt
        bindsym Down        resize grow height 10 px or 10 ppt
        bindsym Up          resize shrink height 10 px or 10 ppt
        bindsym Right       resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
        bindsym Ctrl+g mode "default"
}

# Set workspace movement mode
bindsym $mod+i mode "$move_workspace"
set $move_workspace (h)left, (j)down, (k)up, (l)right, (c)urrent (p)rimary <output> (o)ffice_layout (Shift+o)ffice_external ho(m)e_layout (s)ingle
mode "$move_workspace" {
    bindsym h move workspace to output left; exec notify-send 'move workspace to left output', mode "default"
    bindsym j move workspace to output down; exec notify-send 'move workspace to down output', mode "default"
    bindsym k move workspace to output up; exec notify-send 'move workspace to up output', mode "default"
    bindsym l move workspace to output right; exec notify-send 'move workspace to right output', mode "default"
    bindsym c move workspace to output current; exec notify-send 'move workspace to current output', mode "default"
    bindsym p move workspace to output primary; exec notify-send 'move workspace to primary output', mode "default"
    bindsym o exec --no-startup-id ~/.local/bin/office_dual.sh; exec notify-send 'moved to office layout', mode "default"
    bindsym Shift+o exec --no-startup-id ~/.local/bin/office_single.sh; exec notify-send 'moved to office single layout', mode "default"
    bindsym m exec --no-startup-id ~/.local/bin/dual.sh; exec notify-send 'moved to home layout', mode "default"
    bindsym s exec --no-startup-id /usr/bin/xrandr --auto; exec notify-send 'moved to single display', mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym Ctrl+g mode "default"
}

# Media Playback mode
bindsym $mod+q mode "$media_playback"
set $media_playback (p)lay/pause, (l)next, (h)previous
mode "$media_playback" {
    # don't need to notify-send for the track since most players already do that
    bindsym p exec playerctl play-pause; exec notify-send "play/paused", mode "default"
    bindsym h exec playerctl previous
    bindsym l exec playerctl next

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym Ctrl+g mode "default"
}

# bindsym $mod+Shift+d --release exec "killall dunst; exec notify-send 'restart dunst'"
# Dunst related activities
# TODO: show history
# TODO: have singular key for dnd and off-dnd. use dunstctl is-paused
bindsym $mod+Shift+d mode "$dunst_activities"
set $dunst_activities (r)estart-dunst, (d)nd, (s)top-dnd
mode "$dunst_activities" {
     bindsym r exec killall dunst; exec notify-send 'restart dunst', mode "default"
     # the sleep 10 is because if I don't - the set-paused takes over and I don't see the
     # DND ACTIVE notification
     bindsym d exec dunstctl history-clear && notify-send -u critical 'Do Not Disturb Active'; exec dunstctl history-pop && sleep 2 && dunstctl set-paused true, mode "default"
     bindsym s exec dunstctl set-paused false && exec notify-send -u critical 'Do Not Disturb Inactive', mode "default"


    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym Ctrl+g mode "default"
}


# Color
# Colors set from ~/.Xresources
set_from_resource	$background	background
set_from_resource	$foreground	foreground
set_from_resource	$color0		color0
set_from_resource $color1 	color1
set_from_resource $color2 	color2
set_from_resource $color3 	color3
set_from_resource $color4 	color4
set_from_resource $color5 	color5
set_from_resource $color6		color6
set_from_resource	$color7		color7
set_from_resource	$color8		color8
set_from_resource	$color9		color9
set_from_resource	$color10	color10
set_from_resource	$color11	color11
set_from_resource	$color12	color12
set_from_resource	$color13	color13
set_from_resource	$color14	color14
set_from_resource	$color15	color15

# Theme colors
# class                 border  	  backgr. 	 text    	    indic.  	  child_border
client.focused         	$color15	  $color15	 $background	$color15		$color15
client.unfocused       	$background	$background	$foreground	$background	$background
client.focused_inactive	$foreground	$background	$foreground	$background	$background
client.urgent		        $foreground	$background	$foreground	$background	$background
client.placeholder	    $foreground	$background	$foreground	$background	$background

###############################################################################

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# For now the default bar works out fine
# bar {
# 	  i3bar_command i3bar
#     # status_command i3status
#  	  position bottom
#     font pango:Roboto Normal 9
#     status_command /usr/bin/i3status-rs /home/ophamster/.config/i3status-rust/config.toml
#     colors {
#         background $background
#         #                  border      background  text
#         focused_workspace  $color6     $color6     $background
#         inactive_workspace $background $background $foreground
#         active_workspace   $foreground $background $foreground
#         urgent_workspace   $foreground $background $foreground
#     }
# }

######## Window Exclusions
for_window [all] title_window_icon on
for_window [all] border pixel 2
for_window [class="Yad" title="yad-calendar"] floating enable


#######################################################################
# automatically start i3-config-wizard to offer the user to create a
# keysym-based config which used their favorite modifier (alt or windows)
#
# i3-config-wizard will not launch if there already is a config file
# in ~/.config/i3/config (or $XDG_CONFIG_HOME/i3/config if set) or
# ~/.i3/config.
#
# Please remove the following exec line:
#######################################################################
# exec i3-config-wizard
